<!-- Option 1: Save the SVG code as dialogue-bg.svg in assets/images/ui/ -->

<!-- Option 2: Create dialogue-bg.png from the SVG using this HTML file -->
<!DOCTYPE html>
<html>
<head>
  <title>Generate Dialogue Background</title>
  <style>
    body {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      background-color: #333;
    }
    #convert-container {
      text-align: center;
    }
    button {
      margin-top: 20px;
      padding: 10px 20px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div id="convert-container">
    <!-- Insert the SVG here -->
    <svg id="dialogue-bg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1400" height="280" viewBox="0 0 1400 280">
      <!-- SVG content from the previous artifact -->
      <!-- Copy and paste the entire SVG code here -->
    </svg>
    
    <br>
    <button onclick="convertToImage()">Convert SVG to PNG</button>
    <br>
    <a id="download-link" style="display:none; margin-top: 20px;">Download PNG</a>
  </div>

  <script>
    function convertToImage() {
      const svg = document.getElementById('dialogue-bg');
      const svgData = new XMLSerializer().serializeToString(svg);
      const canvas = document.createElement('canvas');
      canvas.width = 1400;
      canvas.height = 280;
      const ctx = canvas.getContext('2d');
      
      // Set background color
      ctx.fillStyle = '#FFFFFF';
      ctx.fillRect(0, 0, canvas.width, canvas.height);
      
      const img = new Image();
      const blob = new Blob([svgData], {type: 'image/svg+xml'});
      const url = URL.createObjectURL(blob);
      
      img.onload = function() {
        ctx.drawImage(img, 0, 0);
        URL.revokeObjectURL(url);
        
        const pngUrl = canvas.toDataURL('image/png');
        const downloadLink = document.getElementById('download-link');
        downloadLink.href = pngUrl;
        downloadLink.download = 'dialogue-bg.png';
        downloadLink.textContent = 'Download dialogue-bg.png';
        downloadLink.style.display = 'inline-block';
      };
      
      img.src = url;
    }
  </script>
</body>
</html>

<!-- Option 3: CSS-Only Background for your dialogue container -->
<style>
/* If you prefer to use CSS instead of an image */
#dialogue-container {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  min-height: 18%;
  max-height: 30%;
  background-color: rgba(232, 220, 192, 0.9); /* Parchment color with transparency */
  border-top: 2px solid #D4AF37; /* Covenant gold */
  border-radius: 10px 10px 0 0;
  color: #1A365D; /* Scripture blue for text */
  padding: 1rem;
  z-index: 50;
  box-shadow: 0 -4px 12px rgba(42, 21, 6, 0.3); /* Subtle shadow */
  
  /* Texture pattern */
  background-image: 
    linear-gradient(45deg, rgba(212, 201, 168, 0.1) 25%, transparent 25%),
    linear-gradient(-45deg, rgba(212, 201, 168, 0.1) 25%, transparent 25%),
    linear-gradient(45deg, transparent 75%, rgba(212, 201, 168, 0.1) 75%),
    linear-gradient(-45deg, transparent 75%, rgba(212, 201, 168, 0.1) 75%);
  background-size: 20px 20px;
  background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
  
  /* Border effect */
  border-left: 1px solid rgba(139, 69, 19, 0.3);
  border-right: 1px solid rgba(139, 69, 19, 0.3);
}

/* Gold accent for dialogue container */
#dialogue-container::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background-color: #D4AF37; /* Covenant gold */
  opacity: 0.6;
}
</style>
